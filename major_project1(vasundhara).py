# -*- coding: utf-8 -*-
"""major_project1(vasundhara).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MhNNU0qIlyt0MCvN3y7LBfA6mbGrn-zt
"""

import pandas as pd
import numpy as np

import seaborn as sns
import matplotlib.pyplot as plt

from sklearn.preprocessing import normalize
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import StratifiedKFold

from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.naive_bayes import GaussianNB
from sklearn.svm import SVC

import keras
from keras.models import Sequential
from keras.layers import Dense,Activation,Dropout
from keras.layers.normalization import batch_normalization
from keras.utils import np_utils

df = pd.read_csv("iris.csv.csv")

df.head()

df.tail()

df.shape

df.describe()

df.groupby('Species').size()

sns.lmplot('Sepal.Length', 'Sepal.Width' ,
                    data=df,
                    fit_reg=False,
                    hue="Species",
                    scatter_kws={["marker"]:"D",   [ "s"]:50})
plt.title('SepalLength vs SepalWidth')

sns.lmplot('Petal.Length', 'Petal.Width',
                    data=df,
                    fit_reg=False,
                    hue="Species",
                    scatter_kws={"marker":"D",     "s":50})
plt.title('PetalLength vs PetalWidth')

sns.lmplot('Sepal.Length', 'Petal.Length',
                    data=df,
                    fit_reg=False,
                    hue="Species",
                    scatter_kws={"marker":"D",    "s":50})
plt.title('SepalLength vs PetalLength')
sns.lmplot('Sepal.Width', 'Petal.Width',
                    data=df,
                    fit_reg=False,
                    hue="Species",
                    scatter_kws={"marker":"D",   "s":50})
plt.title('SepalWidth vs PetalWidth')
plt.show()

array = df.values
array

X = array[:, 1:5]
y = array[:, 5]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2,random_state=1)

X_train.shape

X_test.shape

model_lda = LinearDiscriminantAnalysis()
model_lda.fit(X_train, y_train)

predictions_lda = model_lda.predict(X_test)
predictions_lda

accuracy_score(y_test, predictions_lda)

pred = model_lda.predict([[5, 2, 3.9, 6.2]])
pred